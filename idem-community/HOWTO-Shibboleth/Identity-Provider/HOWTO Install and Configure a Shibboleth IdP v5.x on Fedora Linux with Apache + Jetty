Requirements Hardware
CPU: 1 Core
RAM: 3 GB
HDD: 20 GB

Software that will be installed
ca-certificates
ntp
java-latest-openjdk-23.0.0.0.37-1
java-latest-openjdk-devel-23.0.0.0.37-1
java-latest-openjdk-headless-23.0.0.0.37-1
jetty-home-12.0.14
jakarta-servlet
jakarta-server-pages
httpd-2.4.62-2
mariadb-java-client-3.3.2-4
apache-commons-dbcp2-2.12.0 (wget https://dlcdn.apache.org//commons/dbcp/binaries/commons-dbcp2-2.12.0-bin.tar.gz)
apache-commons-pool2-2.12.0 (wget https://dlcdn.apache.org//commons/pool/binaries/commons-pool2-2.12.0-bin.tar.gz)
wget


Other Requirements
Place the HTTPS Server Certificate and the HTTPS Server Key inside /tmp directory

Image: fedora-cloud-base-generic.x86_64-40-1.14.qcow2

Install software requirements

1.Become ROOT:

sudo su -

2. Install the packages required:

dnf install java-latest-openjdk-devel mod_ssl httpd wget mariadb-java-client mariadb-rocksdb-engine jakarta-servlet jakarta-server-pages

3. Disable SELinux:

vi /etc/selinux/config

# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#       enforcing - SELinux security policy is enforced.
#       permissive - SELinux prints warnings instead of enforcing.
#       disabled - No SELinux policy is loaded.
SELINUX=disabled

reboot

sudo su -

check that the command getenforce returns Disabled.

Configure the environment

1. Modify your /etc/hosts:

vi /etc/hosts

127.0.1.1 idp.example.org idp
(Replace idp.example.org with your IdP Full Qualified Domain Name)

2. Be sure that your firewall doesn't block the traffic on port 443 (or you can't access to your IdP)

3. Define the costant JAVA_HOME, IDP_HOME and IDP_SRC inside /etc/profile:

vi /etc/profile

add in fondo

export JAVA_HOME=/usr/lib/jvm/jre-23-openjdk-23.0.0.0.37-1.rolling.fc40.x86_64
export IDP_HOME=/opt/shibboleth-idp
export IDP_SRC=/opt/shibboleth-idp-5.1.3
export JETTY_HOME=/opt/jetty-src
export JETTY_BASE=/opt/jetty

source /etc/profile

4. Move the Certificate and the Key file for HTTPS server from /tmp/ to /root/certificates:

mkdir /root/certificates
mv /tmp/idp-cert-server.cer /root/certificates
mv /tmp/idp-key-server.key /root/certificates
mv /tmp/CA_sectigo.cer /root/certificates

5. Configure /etc/default/jetty:

update-alternatives --config java 

type: 2

vi /etc/default/jetty

Insert:
JETTY_HOME=/opt/jetty-src
JETTY_BASE=/opt/jetty
JETTY_PID=/opt/jetty/jetty.pid
JETTY_USER=jetty
JETTY_START_LOG=/var/log/jetty/start.log
TMPDIR=/opt/jetty/tmp

Install Jetty 12 Web Server

1 .Become ROOT:

sudo su -

2. Download and Extract Jetty:

cd /opt
wget https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-home/12.0.14/jetty-home-12.0.14.tar.gz
tar xzvf jetty-home-12.0.14.tar.gz

3. Create an useful-for-updates jetty-src folder:

ln -s jetty-home-12.0.14 jetty-src

4. Create the user jetty that can run the web server:

useradd -r -m jetty

5. Create your custom Jetty configuration that override the default ones:

mkdir /opt/jetty

sostituito da 

6. Create the TMPDIR directory used by Jetty:

mkdir /opt/jetty/tmp ; chown jetty:jetty /opt/jetty/tmp
chown -R jetty:jetty /opt/jetty/ /opt/jetty-src

7. Create the service loadable from command line:

cp /opt/jetty-src/bin/jetty.service /etc/systemd/system/jetty.service

change section [Service] with:

Type=simple
User=jetty
Group=jetty
ExecStart=/usr/bin/java -jar /opt/jetty-src/start.jar jetty.home=/opt/jetty-src jetty.base=/opt/jetty jetty.http.port=8080
ExecStop=/bin/kill ${MAINPID}
SuccessExitStatus=143

 systemctl daemon-reload
 systemctl enable jetty.service




8. Create the JETTY_LOG folder:

mkdir /var/log/jetty
chown jetty:jetty /var/log/jetty

export JETTY_HOME=/opt/jetty-src
export JETTY_BASE=/opt/jetty

cd /opt/jetty

java -jar $JETTY_HOME/start.jar --create-startd --add-modules=server,http,ext

systemctl start jetty

java -jar $JETTY_HOME/start.jar --create-startd --add-modules=home-base-warning,console-capture

vi start.d/console-capture.ini

Set line:
jetty.console-capture.dir=/var/log/jetty

systemctl restart jetty

java -jar $JETTY_HOME/start.jar --create-startd --add-modules=ee10-deploy,ee10-websocket-jakarta,ee10-websocket-jetty,ee10-servlets,ee10-annotations,ee10-jstl,threadpool,requestlog,ee10-plus,http-forwarded,logging-logback

systemctl restart jetty

9. Check if all settings are OK:

systemctl check jetty
systemctl status jetty

10. Install & configure LogBack for all Jetty logging:

mkdir /opt/jetty/etc

wget "https://registry.idem.garr.it/idem-conf/shibboleth/IDP5/jetty-conf/jetty-requestlog.xml" -O /opt/jetty/etc/jetty-requestlog.xml

systemctl restart jetty

11. Configure other Jetty parameters:

vi /opt/jetty/start.d/start.ini

NOTA BENE

Usa /opt/jetty/start.d/idem.ini invece di start.ini

---
# Allows setting Java system properties (-Dname=value)
# and JVM flags (-X, -XX) in this file
# NOTE: spawns child Java process
--exec

# Disable Explicit Garbage Collection
-XX:+DisableExplicitGC

# Enable the parallel collector
-XX:+UseParallelGC

# Maximum amount of memory that Jetty may use, at least 1.5G is recommended
# for handling larger (> 25M) metadata files but you will need to test on
# your particular metadata configuration. If MDQ metadata on demand is used,
# requirements may be much lower.
-Xmx500m

# The initial Java heap size
-Xms256m

# Prevent blocking for entropy.
-Djava.security.egd=file:/dev/urandom

# Set Java tmp location (relative to JETTY_BASE)
-Djava.io.tmpdir=/opt/jetty/tmp

# Enable Javaâ€™s headless mode
# needed to work with graphics-based applications in Java without an actual display, keyboard, or mouse
-Djava.awt.headless=true

# Enable Jetty logback logging
-Dlogback.configurationFile=resources/logback.xml
---

systemctl restart jetty


Install Shibboleth Identity Provider v3.2.1


1. Become ROOT:

sudo su -

2. Download the Shibboleth Identity Provider v3.2.1:

cd /opt
wget https://shibboleth.net/downloads/identity-provider/5.1.3/shibboleth-identity-provider-5.1.3.tar.gz
wget https://shibboleth.net/downloads/identity-provider/5.1.3/shibboleth-identity-provider-5.1.3.tar.gz.asc
wget https://shibboleth.net/downloads/PGP_KEYS
gpg --import /opt/PGP_KEYS
gpg --verify /opt/shibboleth-identity-provider-5.1.3.tar.gz.asc /opt/shibboleth-identity-provider-5.1.3.tar.gz

If the verification contains also the name of Scott Cantor the package is valid.

tar -xzvf shibboleth-identity-provider-5.1.3.tar.gz
cd shibboleth-identity-provider-5.1.3

3. Run the installer install.sh:

./bin/install.sh --hostName $(hostname -f)


Disable Jetty Directory Indexing

!!! ATTENTION !!!

Jetty has had vulnerabilities related to directory indexing (sigh) so we suggest disabling that feature at this point.

1. Create missing directory:

mkdir /opt/shibboleth-idp/edit-webapp/WEB-INF

2. Fix web.xml:

cp /opt/shibboleth-idp/dist/webapp/WEB-INF/web.xml /opt/shibboleth-idp/edit-webapp/WEB-INF/web.xml

3. Rebuild IdP war file:

bash /opt/shibboleth-idp/bin/build.sh


Configure Apache Web Server

...
da inserire
...


Configure Jetty Context Descriptor for IdP

1. Become ROOT:

sudo su -

2. Configure the Jetty Context Descriptor:

mkdir /opt/jetty/webapps
wget "https://registry.idem.garr.it/idem-conf/shibboleth/IDP5/jetty-conf/idp.xml" -O /opt/jetty/webapps/idp.xml

edit /opt/jetty/webapps/idp.xml:

change line

<Configure class="org.eclipse.jetty.webapp.WebAppContext">

in

<Configure class="org.eclipse.jetty.ee10.webapp.WebAppContext">

3. Make the jetty user owner of IdP main directories:

cd /opt/shibboleth-idp
chown -R jetty logs/ metadata/ credentials/ conf/ war/

4. Restart Jetty:

service jetty restart


Configure SSL on Apache2 (Jetty front-end)

1. Modify the file /etc/httpd/conf.d/ssl.conf as follows:

<VirtualHost _default_:443>
  ServerName idp.example.org:443
  ServerAdmin admin@example.org
  DocumentRoot /var/www/html
  ...
  SSLEngine On
  SSLProtocol all -SSLv3 -SSLv2 -TLSv1 -TLSv1.1
  SSLProxyProtocol all -SSLv3 -SSLv2 -TLSv1 -TLSv1.1
 
  SSLCipherSuite "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305"
  SSLProxyCipherSuite PROFILE=SYSTEM
 
  SSLHonorCipherOrder on
 
  # Enable HTTP Strict Transport Security with a 2 year duration
<IfModule headers_module>
        Header set X-Frame-Options DENY
        Header set Strict-Transport-Security "max-age=63072000 ; includeSubDomains ; preload"
</IfModule>

  ...
  SSLCertificateFile /root/certificates/idp-cert-server.crt
  SSLCertificateKeyFile /root/certificates/idp-key-server.key
  SSLCertificateChainFile /root/certificates/DigiCertCA.crt
  ...

  <IfModule mod_proxy.c>
     ProxyPreserveHost On
     RequestHeader set X-Forwarded-Proto "https"
     ProxyPass /idp http://localhost:8080/idp retry=5
     ProxyPassReverse /idp http://localhost:8080/idp retry=5

     <Location /idp>
        Require all granted
     </Location>
  </IfModule>

</VirtualHost>

2. Configure Apache2 to open port 80:

vi /etc/httpd/conf/httpd.conf

# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, instead of the default. See also the <VirtualHost>
# directive.
#
# Change this to Listen on specific IP addresses as shown below to 
# prevent Apache from glomming onto all bound IP addresses.
#
Listen 12.34.56.78:80

3. Create the Apache2 configuration file for IdP:

vi /etc/httpd/conf.d/idp.conf


SSLUseStapling on
SSLStaplingResponderTimeout 5
SSLStaplingReturnResponderErrors off
SSLStaplingCache shmcb:/var/run/ocsp(128000)

<VirtualHost *:80>
   ServerName "idp.example.org"
   Redirect permanent "/" "https://idp.example.org/"
</VirtualHost>


Configure Shibboleth Identity Provider Storage Service

... come da guida, scelta Strategy A

Controllo status:

bash /opt/shibboleth-idp/bin/status.sh -u http://localhost:8080/idp


Configure the Directory Connection

... come da guida

2. dnf install openldap-clients

...

4. Connect the openLDAP to the IdP to allow the authentication of the users:

Solution 3

systemctl restart jetty

bash /opt/shibboleth-idp/bin/status.sh -u http://localhost:8080/idp

Configure Shibboleth Identity Provider to release the persistent NameID

Strategy A

Configure the attribute resolver (sample)

... come da guida

Configure Shibboleth Identity Provider to release the eduPersonTargetedID

Strategy A

Configure Shibboleth IdP Logging

... come da guida

Translate IdP messages into preferred language

... come da guida

Enrich IdP Login Page with the Institutional Logo

... come da guida

Enrich IdP Login Page with Information and Privacy Policy pages

... come da guida

Change default "Forgot your password?" and "Need help?" endpoints

... come da guida

Update IdP metadata

... come da guida

Secure cookies and other IDP data


3. dnf install crontabs

7. NO

Configure Attribute Filter Policy to release attributes to Federated Resources

... come da guida

Register the IdP on the IDEM Test Federation

... come da guida

Importante:
2. Configure the IdP to retrieve the Federation Metadata through IDEM MDX: https://mdx.idem.garr.it/


Appendix A: Enable Consent Module (Attribute Release + Terms of Use Consent)

... come da guida

Appendix B: Import persistent-id from a previous database

No


